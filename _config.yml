# Site
repository: Yoodahun/resume-theme
favicon: images/favicon.ico

# Content configuration version
version: 2

# Personal info
name: Yoo Dahun
title: HYPERCONNECT SDET
email: dahun4032@gmail.com
website: https://velog.io/@dahunyoo

# Dark Mode (true/false/never)
darkmode: never

# Social links
#twitter_username: facespics
github_username:  Yoodahun
# stackoverflow_username: "00000001"
# dribbble_username: jekyll
# facebook_username: jekyll
# flickr_username: jekyll
#instagram_username: jameswgrant
linkedin_username: dahun-yoo
# xing_username: jekyll
# pinterest_username: jekyll
#youtube_username: globalmtb
# googleplus_username: +jekyll
# orcid_username: 0000-0000-0000-0000

# Additional icon links
additional_links:
- title: Velog
  icon: fas fa-book-open
  url: https://velog.io/@dahunyoo
- title: Download PDF
  icon: fas fa-file-pdf
  url: https://yoodahun.github.io/resume/yoodahun_resume.pdf

# - title: another link
#   icon: font awesome brand icon name (eg. fab fa-twitter) (https://fontawesome.com/icons?d=gallery&m=free)
#   url: Link url (eg. https://google.com)

# Google Analytics and Tag Manager
# Using more than one of these may cause issues with reporting
# gtm: "GTM-0000000"
# gtag: "UA-00000000-0"
# google_analytics: "UA-00000000-0"

# About Section
#about_title: About Me
about_profile_image: images/IMG_9608.jpg
about_content: | # this will include new lines to allow paragraphs
  안녕하세요! QA/Test 직군에서 6년째 근무하고 있는 **유다훈** 이라고 합니다.

  현재 하이퍼커넥트에서 Software Development Engineer in Test (SDET) 로 근무중입니다.

  테스트 대상과 테스트 환경 등에 맞추어 적절한 테스트 플랜과 테스트케이스를 설계 / 수립할 수 있으며 테스트상황에 따라 기획, 개발을 포함한 이해관계자들과의 커뮤니케이션을 통해 효율적인 품질개선 및 달성활동을 진행할 수 있습니다.

  컴퓨터공학 지식과 코딩경험도 가지고 있으며 테스트 자동화 프레임워크에 대한 지식과, 일부 프레임워크를 사용하여 현업에서의 테스트 자동화 경험을 가지고 있습니다. 이로 인하여 테스트 대상에 대한 효율적인 테스트 방법을 제안할 수 있으며 필요 시 테스트 자동화를 구축할 수 있습니다.

  주식, 펀드 및 암호자산 서비스에서의 재직경험을 바탕으로한, 금융계열과 블록체인에 대한 도메인 지식과, 여행 커머스업에서의 재직경험을 바탕으로한 커머스 도메인 지식을 가지고 있습니다. 또한 Business Level의 일본어를 구사할 수 있습니다.

  
  - _velog_ : [www.velog.io/@dahunyoo](www.velog.io/@dahunyoo)
  - _Linkedin_ : [https://www.linkedin.com/in/dahun-yoo](https://www.linkedin.com/in/dahun-yoo)
  - _Gmail_ : dahun4032@gmail.com


  <div style="text-align: right;"> _last update: 2024. 07_ </div>

content:
  - title: Experience # Title for the section
    layout: list # Type of content section (list/text)
    content:

      - layout: left
        title: HYPERCONNECT
        sub_title: Software Development in Test
        caption: 2023. 12 - Present, Seoul, Korea
        quote: >
          세상을 연결하는 다양한 비디오 및 인공지능 기술 기반의 서비스를 제공
        description: | # this will include new lines to allow paragraphs
          현재는 Azar 제품의 기존 매뉴얼 회귀테스트케이스를 자동화하는 업무를 수행하고 있습니다.
          - Automate Manual UI Test using Appium
          - Design Test automation test system structure
          
          팀의 초기 Building 작업을 진행하였으며 아래의 내용들을 수행하였습니다.
          - PageObject 모델링을 이용한 자동화 코드의 구조 작성
          - Fixture를 이용한 테스트의 Setup, Teardown 기능 구성
          - 유지보수를 위한 코드 컨벤션 수립 및 관련 문서 작성
          - Selenium grid를 이용한 병렬 실행 구성
          - 실행결과를 allure report 호스팅 주소와 함께 Slack 채널로 리포트를 하는 스크립트 작성
        
          현재 기존 매뉴얼 회귀 테스트케이스 대비 약 10% 초반의 커버리지를 구현하고 있으며, QA팀의 리소스 절감을 위한 활동들을 수행하고 있습니다.
          
          ---

      - layout: left
        title: MyRealTrip
        sub_title: Technical QA Engineer
        caption: 2022. 01 - 2023. 12, Seoul, Korea
        quote: >
          항공권 예매부터 숙박, 렌터카, 식사 및 투어까지 여행에서의 Super APP으로 성장하고 있는 서비스
        description: | # this will include new lines to allow paragraphs
          현재는 매뉴얼 회귀 테스트에 대한 자동화 업무와, API테스트의 자동화를 수행하고 있습니다.
          - Automate Manual UI Test using Selenium, Appium
          - Design Test automation test system structure
          - Automate API Test using Newman script

          프로젝트 전반에 걸쳐 아래와 같은 활동을 진행하였습니다.
          - Project의 Kick-off 부터 Sign-off 후의 모니터링까지 프로젝트 모든 단계에서 전반적인 품질활동 실시
          - Design and Implement TestCase and TestScenario
          - Design Test Policy and Test Plan
          - Managing E2E Test Schedule
          - Testing Server-driven UI data
          - Check User log data

          또한 필요한 경우에는 API테스트 활동을 진행하였습니다.
          - Write and Execute API Test using Postman, Newman

          팀 내에서 의견이 필요한 경우에는 적극적으로 의견을 전개하였으며 아래 내용을 주도적으로 실시하였습니다.
          - API Test process 전반에 대한 Ideation 진행
          - 팀 편성에 대한 의견 전개
          - 팀 내 품질활동 스터디 주도

          ## **Automate Manual UI / API Test**
          현재 팀 내 Tech파트에서 자동 UI테스트에 대한 시스템 구성을 제안하고, 안드로이드 테스트 자동화를 수행하였으며 API 자동 테스트에 대한 유지보수를 담당하고 있습니다.

          #### _2023. 05 ~ 2023. 12_
          - <mark>자동 UI테스트 시스템 구성 제안</mark>
          - Convention guide 작성
          - Selenium gird를 이용한 팀장비 Hub/Node 관리 구축 (실기기 연결)
          - Python을 이용한 Android 테스트 자동화 코드 작성
          - 작성된 자동 테스트 코드에 대해 Jenkins를 이용한 주기적인 테스트 수행 및 Slack report
          - Allure report를 이용한 간단한 리포트 제공
          - Github Pull request를 통한 코드리뷰 진행 > 적절한 명시적 대기(wait) 사용 방법 전파를 통해 테스트 수행시간을 <mark>약 20분 단축</mark>
          - [테스트 자동화 후기](https://velog.io/@dahunyoo/서비스-UI-테스트-자동화-시작-후기)


          ## **Search and Recommendation, Buy Conversion**
          MyRealTrip에서는 전반적으로 검색추천 기능에 대한 품질활동을 수행하고 있으며, 그 외 구매전환을 위한 관련 프로덕트에 대해 품질활동을 수행하였습니다.

          #### _2023. 03 ~ 2023.04_ Themelist
          - 특정 테마로 묶여진 상품에 대한 리스트를 보여주는 기능
          - <mark>API 테스트</mark>를 통한 백엔드 서버 품질활동 수행
          - Response 구조에 따라 UI 형태가 바뀌는, Server-driven UI 검증
          - 매뉴얼 UI 테스트 수행
          - API 테스트를 하며 작성한 스크립트에 대해 <mark>Jenkins를 이용한 테스트 자동화 구축</mark>

          #### _2022. 12 ~ 2023. 01_, Wishlist
          - 위시리스트 기능에 대해, 모놀리틱 아키텍처에서 마이크로 서비스 아키텍처로 전환하는 안건
          - <mark>API 테스트</mark>를 통해 위시리스트 API에 대해 구버전 API과 신규 API간의 상호 호환확인
          - <mark>API 테스트</mark>를 통해 웹 API와 앱API간의 상호 교차확인
          - Response 구조에 따라 UI 형태가 바뀌는, Server-driven UI 검증
          - 신규 개발되는 위시리스트 화면에 대한 매뉴얼 UI 테스트 수행
          - API Test 프로세스 수립을 위해, API Test 수행 후 통계정보 수집 및 이해관계자들 인터뷰 진행

          #### _2022. 11 ~ 2022. 12_, Improvement search feature
          - 제품 내 숙소기능 개편에 따른, 숙소 상품 노출개선을 위한 검색 기능 수정 작업
          - 검색어 패턴에 따른 상품 노출조건 확인
          - 검색어 및 카테고리, 필터, 정렬 파라미터를 이용한 <mark>API Test</mark> 실시
          - Response 구조에 따라 UI 형태가 바뀌는, Server-driven UI 검증
          - API Test 프로세스 수립을 위해, API Test 수행 후의 통계정보 수집 및 이해관계자들 인터뷰 진행

          #### _2022. 10 ~ 2022. 11_, In-App Message bottom sheet
          - 상품 구매 후 추가 상품 구매 유도를 위해, 상품 구매완료 후에 다른 상품을 추천해주는 내용을 바텀시트를 통해 제안하는 기능
          - 바텀 시트 노출 타이밍 및 동작 검증
          - Response 구조에 따라 UI에 노출되는 형태가 바뀌는, Server-driven UI 검증

          #### _2022. 05 ~ 2022. 06_, ADD public & recommendation data on Cityhome
          - 사내 데이터 분석 결과, 여행자들이 많이 찾는 화면인 _도시홈_ 에 대해 좀 더 많은 추천 섹션을 보여주기 위한 개편 안건
          - 실시간 예약, 후기가 발생한 상품 섹션 및 해당 도시의 추천 상품 섹션 검증
          - 테스트환경에서는 테스트 데이터 이슈로 인하여 추천 및 실시간 데이터가 제대로 노출이 안되는 문제를 확인하여 테스트 환경에서의 확인은 최소화로 하고 스테이지환경에서의 검증을 하자고 테스트 플랜 제안.
          - 스테이지 환경에서, 실제 예약, 후기가 발생하는 데이터 등을 이용하여 불필요한 테스트 기간 최소화. 예상보다 약 <mark>2일</mark> 정도의 공수를 절약할 수 있었으며, 빠른 릴리즈 성공

          #### _2022. 03 ~ 2022. 04_ , NEW Search feature release
          - 기존의 Ruby on Rails의 Monolithic architecture로 되어있던 검색 서비스에 대해, JAVA Spring기반의 MSA로의 전환
          - 기존 검색기능에 대해 Response 분석
          - Pair-wise기법을 통한 검색조건, 필터, 정렬에 대한 테스트케이스 작성
          - POSTMAN을 이용한 API Test 구현
          - Github, Jenkins, Newman을 이용하여 검색기능에 대한 지속적인 모니터링 구현을 통하여 지속적인 검색품질 확인

          ---

      - layout: left
        title: LINE Fukuoka Corp.
#        link: boringcompany.com
        # link_text: boringcompany.com
        sub_title: QA Engineer
        caption: 2019. 10 - 2021. 12, Fukuoka, Japan
        quote: >
          전세계 AU 1억 2천여명 이상의 일본의 인프라 레벨 수준의 국민적 메신저 서비스
        description: | # this will include new lines to allow paragraphs
          ## **CryptoCurrency brokerage service back-office feature**
          ## **CryptoCurrency NFT Market and Biz serivce back-office feature**

          프로젝트 전반에 걸쳐 아래와 같은 업무를 진행하였습니다.
          - Project의 Kick-off 부터 Sign-off까지 프로젝트 모든 단계에 전반적인 QA활동 실시
          - QA Process 및 Testcase에 대한 Review Process 정립
          - Design Test Policy and Test Plan
          - Managing E2E Test Schedule
          - Writing some other Test documents using Confluence on Korean, Japanese Business level.
          - Design and Implement Manual TestCase and TestScenario using Testrail
          - Design and Implement Automating E2E Test using Cucumber, Selenium, TestNG
          - E2E UI Test Design and Implement, maintenance.

          #### _2021. 07 ~ 2021. 08_, 한국 내 코인거래소에서의 LINK 상장 관련 작업 진행
          - 국내 코인거래서 빗썸에서의 LINK 상장에 따라 시세 반영 및 코인 유동성 관리기능 검증

          #### _2021. 05 ~ 2021. 05_, NFT Market and Biz Service Launch
          - B2C NFT Market 및 Market에 등록하는 법인용(Biz) Service OPEN
          - 정산기능 및 법인용 법적장부 기능 검증.

          #### _2020. 11_, 2021. 03_, LINE 자체 Wallet Platform으로의 자산이관
          - Product뿐만 아니라 Project 단위의 결과물인 자산이관 계획 Review
          - 테스트환경에서 개발팀과의 리허설 진행 후 자산이관 계획 Feedback
          - Real환경에서 무사고 <mark>자산이관</mark> 실현

          #### _2020. 08 ~ 2021. 12_ [E2E Regression Test 자동화](https://velog.io/@dahunyoo/Manual-QA-Engineer가-UI기반-E2E-회귀-테스트를-자동화-한-후기)
          - Cucumber, Selenium을 이용한 회귀 테스트 자동화 구현
          - 기존 Regression test 공수 대비 <mark>4~50%</mark> 단축

          #### _2020. 07_, LINE 발행 암호자산 (LINK) 상장
          - 신규 암호자산 상장에 따른 Wallet Structure, 정산기능 Review 및 Feedback

          #### _2020. 05_, 법령개정 대응으로 인한 Wallet Structure 변경
          - 일본 가상화폐 법령 개정으로 인한 시스템 구성 변경
          - Wallet Structure 변경으로 인한 유동성 관리 계획 Review 및 Feedback 진행

          ---

      - layout: left
        title: Pioneer Soft
        sub_title: System Engineer
        caption: 2018. 04 - 2019. 09, Fukuoka, Japan
        quote: >
          China Offshore 와의 Communication을 통한 개발을 진행하는 증권회사 프로덕트 개발
        description: | # this will include new lines to allow paragraphs
          ## **Related to Stock, Fund and Customer management system**
          - Implement Unit Test using JUnit
          - Design and Implement Integration Test
          - Build Test env on Linux server

          #### _2019. 07 ~ 2019. 09_, A사 펀드 구매 시스템 프로젝트
          - 기존 엑셀과 SVN으로 관리되던 Bug Tracking Process를 RubyMine으로 <mark>이전 제안 및 실행</mark>

          #### _2019. 02 ~ 2019. 06_, O지방은행 주식, 펀드, 채권거래 프로젝트
          #### _2018. 07 ~ 2019. 01_, D사 적립식 주식 구매 시스템 프로젝트


  - title: Personal Project and Portfolio, Activity # Title for the section
    layout: list # Type of content section (list/text)
    content:
      - layout: left
        title: 외부활동 - 2023 2nd QA Korea Conference speaker
        link: https://www.linkedin.com/posts/qa-korea-conference_software-qa-business-activity-7083811087401287680-Pa1v
        quote: >
          컨퍼런스 연사자 참여
        description: | # this will include new lines to allow paragraphs
          2023 2nd QA Korea Conference에 _API 테스트의 시작_ 이라는 주제로 참여하였습니다.
          
          API테스트를 수행할 떄에는 어떤 점들을 챙겨야하는지에 관한 기초적인 부분부터, MyRealTrip에서 수행한 경험을 바탕으로한 구체적인 테스트 후기를 공유하였습니다.

          [https://festa.io/events/3572](https://festa.io/events/3572)

      - layout: left
        title: 개인 블로그 - Velog
        link: https://velog.io/@dahunyoo/
        quote: >
          QA / Test 관련 문서뿐만 아니라 실제 업무에서 적용해보았던 기술들을 정리
        description: | # this will include new lines to allow paragraphs
          QA / Test 관련 문서들 및 각종 Technical한 내용들에 대해 꾸준히 정리하고 있습니다.
          Udemy에서 수강한 내용들을 정리하여 올리기도 합니다.

          [https://velog.io/@dahunyoo/](https://velog.io/@dahunyoo/)

      - layout: left
        title: 팀에서 협업을 통해 UI테스트 자동화를 시작하고 나서의 후기
        link: https://velog.io/@dahunyoo/서비스-UI-테스트-자동화-시작-후기
        quote: >
          팀에서 매뉴얼 테스트케이스에 대해 자동화를 하기 시작하면서, 시스템 구성 및 유지보수를 위한 고민들을 기록.
        description: | # this will include new lines to allow paragraphs
          현재 업무로 진행하고 있는 테스트 자동화에 대해, 팀원들과 논의하거나 고민하면서 시도해본 내용들, 그리고 앞으로 고민해야할 것들에 대해 정리해보았습니다.
          특히 현재 업무에서는 상속을 통한 관계의 명시화와 Test step의 공통모듈화에 중점을 두고 업무를 진행하였습니다.

          업무에서의 자동화는 아래의 기술들을 이용하여 자동화하였습니다.
          - Selenium
          - Appium
          - Selenium grid 3
          - Python
          - Pytest
          - Jenkins
          - Allure report
          - logger

          [https://velog.io/@dahunyoo/서비스-UI-테스트-자동화-시작-후기](https://velog.io/@dahunyoo/서비스-UI-테스트-자동화-시작-후기)

      - layout: left
        title: API 테스트를 개발 프로세스 상에 녹여가며 느낀 점들
        link: https://velog.io/@dahunyoo/API-테스트-후기
        quote: >
          API 테스트를 개발 프로세스 중에 진행을 해보았는데 이에 관련한 느낀점들 정리
        description: | # this will include new lines to allow paragraphs
          Postman을 통한 API테스트를 수행하면서 느낀 점들을 정리하였습니다.

          [https://velog.io/@dahunyoo/API-테스트-후기](https://velog.io/@dahunyoo/API-테스트-후기)

      - layout: left
        title: 업무에서 E2E Manual Regression Test를 자동화한 후기
        link: https://velog.io/@dahunyoo/Manual-QA-Engineer가-UI기반-E2E-회귀-테스트를-자동화-한-후기
        quote: >
          실제 업무에서 Regression Test를 자동화하는 과정에서 고민했던 점들, 자동화를 한 후에 느낀 점들을 기록.
        description: | # this will include new lines to allow paragraphs
          Manual QA가 업무에서 Regression Test를 자동화하는 과정들과 그 과정에서 고민했던 것들, 자동화 후에 느낀 점들, 개선해야할 점들 등을 기재해보았습니다.

          업무에서의 자동화는 아래의 기술들을 이용하여 자동화하였습니다.
          - Selenium
          - Cucumber-JVM
          - TestNG
          - Maven
          - Testrail

          [https://velog.io/@dahunyoo/Manual-QA-Engineer가-UI기반-E2E-회귀-테스트를-자동화-한-후기](https://velog.io/@dahunyoo/Manual-QA-Engineer가-UI기반-E2E-회귀-테스트를-자동화-한-후기)

      - layout: left
        title: CI Flow using Github Action Triggering
        link: https://velog.io/@dahunyoo/Github-Action의-Triggering을-이용한-간단한-CI-구성해보기
        quote: >
          Github action의 Webhook을 이용한 Trigger를 만들어 API 자동 테스트 파이프라인 구축.
        description: | # this will include new lines to allow paragraphs
          Server의 Repository로 Push이벤트가 발생한다면, 특정 서버로 배포 후에 API Test code가 위치한 Repository로 Github API를 이용한 Webhook을 실행시켜, Github action을 이용하여  API Test를 자동으로 수행하게끔 구축.

          구축 후기 : [https://velog.io/@dahunyoo/Github-Action의-Triggering을-이용한-간단한-CI-구성해보기](https://velog.io/@dahunyoo/Github-Action의-Triggering을-이용한-간단한-CI-구성해보기)

      - layout: left
        title: API Test using BDD Framework on JAVA / Python
        quote: >
          Udemy의 Flask framework강의를 보며 만든 간단한 API server를 기반으로 한 API Test 구현
        description: | # this will include new lines to allow paragraphs
          Udemy의 Flask framework 강의를 보며 만든 간단한 API Server를 기반으로, BDD framework( _Cucumber_, _behave_) 를 이용한 User Scenario 상정 및 테스트 케이스를 작성하여 구현한
          API test입니다.
          - API Server : [https://github.com/Yoodahun/Practice-Flask-RESTful](https://github.com/Yoodahun/Practice-Flask-RESTful)

          기본적으로는 모든 Status code를 발생시켜 확인하는 것을 중심으로 하였으며 CRUD의 흐름으로 작성되어있습니다.

          JAVA는 Cucumber와 Rest Assured, Python은 behave와 requests를 사용하였습니다.
          - JAVA : [https://github.com/Yoodahun/APITest-using-Java-RestAssured-for-FlaskRESTful](https://github.com/Yoodahun/APITest-using-Java-RestAssured-for-FlaskRESTful)
          - Python : [https://github.com/Yoodahun/APITest-using-Python-behave-for-FlaskRESTful](https://github.com/Yoodahun/APITest-using-Python-behave-for-FlaskRESTful)

      - layout: left
        title: Test Policy, Test Plan and Testcase
        quote: >
          현재 업무에서 사용하고 있는 포맷으로 작성된, 테스트 정책, 테스트 계획 및 테스트 케이스
        description: | # this will include new lines to allow paragraphs
          현업에서 사용하고 있는 포맷으로 작성된 테스트 정책, 테스트 계획 및 테스트 케이스입니다. 포맷을 가장 비슷하게 구성할 수 있는 Notion으로 작성하였습니다.

          내용은 전부 임의로 작성하였으며, 테스트케이스 역시 특정한 프로덕트나 서비스를 지칭하지 않는, 임의의 서비스를 대상으로 한 테스트 케이스이며 Excel로 작성되어 있습니다.
          - [Test Policy](https://dahunyoo.notion.site/Test-Policy-1e28b43c91c74a699c3772209cae3d6c)
          - [TestPlan and Testcase](https://dahunyoo.notion.site/TestPlan-Testcase-9193ca7f9cbd48a3a45e9052d774506a)
            - Testcase는 TestPlan 본문 중간에 임베드 하여 첨부하였습니다.


          ----


#      - layout: left
#        title: Rails Tutorial Translation
#        link: github.com/Yoodahun/Rails_Tutorials_Translation
##        additional_links:
##          - title:  sproogen/modern-resume-theme
##            icon: fab fa-github
##            url: github.com/sproogen/modern-resume-theme
#          # - title:  Github page for project (eg. sproogen/modern-resume-theme)
#          #   icon: fab fa-github
#          #   url: Link to project (eg. sproogen.github.io/modern-resume-theme)
#        quote: >
#          Michael Hartl 의 Ruby on Rails Tutorial 의 일어판을 한국어로 번역.
#        description: | # this will include new lines to allow paragraphs
#          단종된 _Ruby on Rails Tutorial_ 의 v4 일어판을 원작자의 허가를 얻어 번역해보았습니다. 현재는 Rails5의 release에 따라 개정된 상황입니다.
#
#          서점에서 일어판을 보게 되었는데 레일즈를 비롯한 Web의 기본구조에 대해서도 차근차근 설명해주고 있어서 번역에 도전해보게 되었습니다.
#
#          본 프로젝트는 Ruby on Rails Facebook group에도 공유되었습니다.
#          [원본의 링크입니다.](https://www.railstutorial.org/)
#

  - title: Skill # Title for the section
    layout: list # Type of content section (list/text)
    content:

        - layout: left
          title: Testing
          caption: Java, Python
          description: | # this will include new lines to allow paragraphs
            - Selenium, Appium
            - Cucumber, behave (BDD Framework)
            - REST Assured, requests, POSTMAN, Newman
            - Maven, TestNG, JUnit, Pytest
            - Testrail, Redmine
            - Web Debugging Proxy Tool (Charles)

        - layout: left
          title: Communication
          description: |
           - JIRA, Confluence, Zeplin, Figma, Slack, Notion, Redmine

        - layout: left
          title: Others
          description: |
            - SQL
            - Git, SVN, Bash(Linux command)
            - Flask

  - title: Education # Title for the section
    layout: list # Type of content section (list/text)
    content:
      - layout: left
        title: Udemy Online course
        caption: 2018 - Present
        link: udemy.com
        quote: >
          온라인 교육/강의 플랫폼 Udemy를 통하여 업무역량 강화를 위한 계속적인 자기계발
        description: |

          ## API and API Test
          - REST APIs with Flask and Python
          - Rest APITesting from Scratch - ResetAssured Java
          - Postman - The Complete guide - REST API Testing
          - Python SDET - Backend RestAPI Testing with BDD Framework
          - Elegant Automation Frameworks with Python and Pytest

          ## CI/CD
          - Devops Fundamentals - CI/CD with AWS+Docker+Ansible+Jenkins

          ## Performance
          - Learn JMETER from Scratch on Live Apps - Performance Testing

          ## BDD framework, Selenium, Appium
          - Selenium 4, Docker & AWS integration
          - Automated Software testing with Python
          - Cucumber with Java-Build Automation Framework in lesser code
          - Appium Frameworks -Mobile Automation Testing from Scracth
          - Selenium Webdriver with Java -Basics to Advanced Frameworks
          
          ## Testing tool
          - JIRA & Agile을 사용하는 소프트웨어 테스트 마스터 클래스: 품질보증 팀 리더되기

          ## Bash
          - Bash Shell Scripting: Crash Course for Beginners

      - layout: left
        title: SCSC
        caption: 2015 - 2019
        sub_title: Samsung Convergence Software Course.
        quote: >
          삼성에서 후원하는 비전공자전용 부전공 코스
        description: | # this will include new lines to allow paragraphs
          삼성에서 선정한 총 30학점의 부전공 코스를 수료하였습니다.
          주요 커리큘럼은 아래와 같습니다.
          - Computer Programming
          - Object-Oriented Design
          - Data Structure
          - Operating System
          - Database
          - Algorithms

      - layout: left
        title: Chungnam National Univ.
        sub_title: 충남대학교.
        caption: 2010 - 2018
        description: | # this will include new lines to allow paragraphs
          - Major : Japanese Language and Literature
          - Minor : Computer Science and Engineering



# Footer
footer_show_references: false
# references_title: References on request (Override references text)

# Build settings
remote_theme: sproogen/resume-theme

sass:
  sass_dir: _sass
  style: compressed

plugins:
 - jekyll-seo-tag
